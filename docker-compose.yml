services:
  web:
    build:
      context: ./frontend
      args:
        VITE_AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
        VITE_AUTH0_CLIENT_ID: ${VITE_AUTH0_CLIENT_ID}
        VITE_AUTH0_AUDIENCE: ${VITE_AUTH0_AUDIENCE}
        VITE_STREAM_URL: ${VITE_STREAM_URL}
    environment:
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-.*}
      - PRISM_API_PORT=${PRISM_API_PORT}
      - STREAM_SERVICE_PORT=${STREAM_SERVICE_PORT}
    ports:
      - "${FRONTEND_PORT}:443"
    volumes:
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - prism-api
      - stream-service
  prism-api:
    build: ./prism-api
    environment:
      - STORAGE_CONNECTION_STRING=${STORAGE_CONNECTION_STRING}
      - TASK_EVENTS_TABLE=${TASK_EVENTS_TABLE}
      - USER_EVENTS_TABLE=${USER_EVENTS_TABLE}
      - AUTH0_DOMAIN=${VITE_AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${VITE_AUTH0_AUDIENCE}
      - TASKS_TABLE=${TASKS_TABLE}
      - USERS_TABLE=${USERS_TABLE}
      - COMMAND_QUEUE=${COMMAND_QUEUE}
      - AzureWebJobsStorage=${STORAGE_CONNECTION_STRING}
      - AzureWebJobsScriptRoot=/home/site/wwwroot
      - AzureFunctionsJobHost__Logging__Console__IsEnabled=true
      - FUNCTIONS_WORKER_RUNTIME=custom
      - ASPNETCORE_URLS=http://+:${PRISM_API_PORT}
    ports:
      - "${PRISM_API_PORT}:${PRISM_API_PORT}"
    depends_on:
      azurite:
        condition: service_healthy
      storage-init:
        condition: service_completed_successfully
  stream-service:
    build: ./stream-service
    environment:
      - STORAGE_CONNECTION_STRING=${STORAGE_CONNECTION_STRING}
      - TASKS_TABLE=${TASKS_TABLE}
      - COMMAND_QUEUE=${COMMAND_QUEUE}
      - AUTH0_DOMAIN=${VITE_AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${VITE_AUTH0_AUDIENCE}
      - STREAM_SERVICE_PORT=${STREAM_SERVICE_PORT}
    ports:
      - "${STREAM_SERVICE_PORT}:${STREAM_SERVICE_PORT}"
    depends_on:
      azurite:
        condition: service_healthy
      storage-init:
        condition: service_completed_successfully
  domain-service:
    build: ./domain-service
    environment:
      - STORAGE_CONNECTION_STRING=${STORAGE_CONNECTION_STRING}
      - TASK_EVENTS_TABLE=${TASK_EVENTS_TABLE}
      - USER_EVENTS_TABLE=${USER_EVENTS_TABLE}
      - COMMAND_QUEUE=${COMMAND_QUEUE}
      - DOMAIN_EVENTS_QUEUE=${DOMAIN_EVENTS_QUEUE}
      - AzureWebJobsStorage=${STORAGE_CONNECTION_STRING}
    depends_on:
      azurite:
        condition: service_healthy
      storage-init:
        condition: service_completed_successfully
  read-model-updater:
    build: ./read-model-updater
    environment:
      - STORAGE_CONNECTION_STRING=${STORAGE_CONNECTION_STRING}
      - DOMAIN_EVENTS_QUEUE=${DOMAIN_EVENTS_QUEUE}
      - TASKS_TABLE=${TASKS_TABLE}
      - USERS_TABLE=${USERS_TABLE}
      - AzureWebJobsStorage=${STORAGE_CONNECTION_STRING}
    depends_on:
      azurite:
        condition: service_healthy
      storage-init:
        condition: service_completed_successfully
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 5s
      timeout: 3s
      retries: 5
    command: ["azurite", "-s", "-l", "--skipApiVersionCheck", "/data", "--blobHost", "0.0.0.0","--queueHost", "0.0.0.0", "--tableHost", "0.0.0.0"]
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - azurite_data:/data

  storage-init:
    build: ./storage-init
    environment:
      - STORAGE_CONNECTION_STRING=${STORAGE_CONNECTION_STRING}
      - TASK_EVENTS_TABLE=${TASK_EVENTS_TABLE}
      - USER_EVENTS_TABLE=${USER_EVENTS_TABLE}
      - TASKS_TABLE=${TASKS_TABLE}
      - USERS_TABLE=${USERS_TABLE}
      - COMMAND_QUEUE=${COMMAND_QUEUE}
      - DOMAIN_EVENTS_QUEUE=${DOMAIN_EVENTS_QUEUE}
    depends_on:
      azurite:
        condition: service_healthy
    restart: "no"

volumes:
  azurite_data:
