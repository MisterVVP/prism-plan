x-prism-api: &prism-api-base
  build: ./prism-api
  environment: &prism-api-env
    DEBUG: ${DEBUG}
    STORAGE_CONNECTION_STRING: ${STORAGE_CONNECTION_STRING}
    TASK_EVENTS_TABLE: ${TASK_EVENTS_TABLE}
    USER_EVENTS_TABLE: ${USER_EVENTS_TABLE}
    AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
    AUTH0_AUDIENCE: ${VITE_AUTH0_AUDIENCE}
    TASKS_TABLE: ${TASKS_TABLE}
    SETTINGS_TABLE: ${SETTINGS_TABLE}
    USERS_TABLE: ${USERS_TABLE}
    COMMAND_QUEUE: ${COMMAND_QUEUE}
    REDIS_CONNECTION_STRING: ${REDIS_CONNECTION_STRING}
    AzureWebJobsStorage: ${STORAGE_CONNECTION_STRING}
    AzureWebJobsScriptRoot: /home/site/wwwroot
    AzureFunctionsJobHost__Logging__Console__IsEnabled: "true"
    FUNCTIONS_WORKER_RUNTIME: custom
    WEBSITES_INCLUDE_CLOUD_CERTS: "true"
  depends_on:
    azurite:
      condition: service_healthy
    storage-init:
      condition: service_completed_successfully

services:
  web:
    build:
      context: ./frontend
      args:
        VITE_AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
        VITE_AUTH0_CLIENT_ID: ${VITE_AUTH0_CLIENT_ID}
        VITE_AUTH0_AUDIENCE: ${VITE_AUTH0_AUDIENCE}
        VITE_STREAM_URL: ${VITE_STREAM_URL}
    environment:
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-.*}
      PRISM_API_LB_PORT: ${PRISM_API_LB_PORT}
      STREAM_SERVICE_PORT: ${STREAM_SERVICE_PORT}
    ports:
      - "${FRONTEND_PORT}:443"
    volumes:
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - prism-api-lb
      - stream-service
    restart: unless-stopped

  prism-api-1:
    <<: *prism-api-base
    environment:
      <<: *prism-api-env
      ASPNETCORE_URLS: http://+:7072
    expose:
      - "7072"
    restart: unless-stopped

  prism-api-2:
    <<: *prism-api-base
    environment:
      <<: *prism-api-env
      ASPNETCORE_URLS: http://+:7073
    expose:
      - "7073"
    restart: unless-stopped

  prism-api-lb:
    environment:
      PRISM_API_LB_PORT: ${PRISM_API_LB_PORT}
    image: haproxy:3.0-alpine
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "${PRISM_API_LB_PORT}:${PRISM_API_LB_PORT}"
    depends_on:
      - prism-api-1
      - prism-api-2
  stream-service:
    build: ./stream-service
    environment:
      DEBUG: ${DEBUG}
      AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
      AUTH0_AUDIENCE: ${VITE_AUTH0_AUDIENCE}
      STREAM_SERVICE_PORT: ${STREAM_SERVICE_PORT}
      REDIS_CONNECTION_STRING: ${REDIS_CONNECTION_STRING}
      TASK_UPDATES_CHANNEL: ${TASK_UPDATES_CHANNEL}
      SETTINGS_UPDATES_CHANNEL: ${SETTINGS_UPDATES_CHANNEL}
      WEBSITES_INCLUDE_CLOUD_CERTS: true
    ports:
      - "${STREAM_SERVICE_PORT}:${STREAM_SERVICE_PORT}"
    restart: unless-stopped

  domain-service:
    build: ./domain-service
    environment:
      STORAGE_CONNECTION_STRING: ${STORAGE_CONNECTION_STRING}
      TASK_EVENTS_TABLE: ${TASK_EVENTS_TABLE}
      USER_EVENTS_TABLE: ${USER_EVENTS_TABLE}
      COMMAND_QUEUE: ${COMMAND_QUEUE}
      DOMAIN_EVENTS_QUEUE: ${DOMAIN_EVENTS_QUEUE}
      AzureWebJobsStorage: ${STORAGE_CONNECTION_STRING}
      AzureWebJobsScriptRoot: /home/site/wwwroot
      AzureFunctionsJobHost__Logging__Console__IsEnabled: true
      AzureFunctionsJobHost__Logging__LogLevel__Default: ${AZ_FUNC_JOB_HOST_LOG_LEVEL}
      FUNCTIONS_WORKER_RUNTIME: dotnet-isolated
    depends_on:
      azurite:
        condition: service_healthy
      storage-init:
        condition: service_completed_successfully
    restart: unless-stopped

  read-model-updater:
    build: ./read-model-updater
    environment:
      DEBUG: ${DEBUG}
      STORAGE_CONNECTION_STRING: ${STORAGE_CONNECTION_STRING}
      DOMAIN_EVENTS_QUEUE: ${DOMAIN_EVENTS_QUEUE}
      TASKS_TABLE: ${TASKS_TABLE}
      SETTINGS_TABLE: ${SETTINGS_TABLE}
      USERS_TABLE: ${USERS_TABLE}
      REDIS_CONNECTION_STRING: ${REDIS_CONNECTION_STRING}
      TASK_UPDATES_CHANNEL: ${TASK_UPDATES_CHANNEL}
      SETTINGS_UPDATES_CHANNEL: ${SETTINGS_UPDATES_CHANNEL}
      AzureWebJobsStorage: ${STORAGE_CONNECTION_STRING}
      AzureWebJobsScriptRoot: /home/site/wwwroot
      AzureFunctionsJobHost__Logging__Console__IsEnabled: true
      AzureFunctionsJobHost__Logging__LogLevel__Default: ${AZ_FUNC_JOB_HOST_LOG_LEVEL}
      FUNCTIONS_WORKER_RUNTIME: custom
    depends_on:
      azurite:
        condition: service_healthy
      storage-init:
        condition: service_completed_successfully
      redis:
        condition: service_started
    restart: unless-stopped

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 5s
      timeout: 3s
      retries: 5
    command: ["azurite", "-s", "-l", "--skipApiVersionCheck", "/data", "--blobHost", "0.0.0.0","--queueHost", "0.0.0.0", "--tableHost", "0.0.0.0"]
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - azurite_data:/data
    restart: unless-stopped

  storage-init:
    build: ./storage-init
    environment:
      DEBUG: ${DEBUG}
      STORAGE_CONNECTION_STRING: ${STORAGE_CONNECTION_STRING}
      TASK_EVENTS_TABLE: ${TASK_EVENTS_TABLE}
      USER_EVENTS_TABLE: ${USER_EVENTS_TABLE}
      TASKS_TABLE: ${TASKS_TABLE}
      SETTINGS_TABLE: ${SETTINGS_TABLE}
      USERS_TABLE: ${USERS_TABLE}
      COMMAND_QUEUE: ${COMMAND_QUEUE}
      DOMAIN_EVENTS_QUEUE: ${DOMAIN_EVENTS_QUEUE}
    depends_on:
      azurite:
        condition: service_healthy
    restart: "no"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  azurite_data:
