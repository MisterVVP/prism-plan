x-prism-api: &prism-api-base
  environment: &prism-api-env
    - APP_ENV=test
    - AUTH0_TEST_MODE=1
    - TEST_JWT_SECRET=${TEST_JWT_SECRET}
    - REDIS_CONNECTION_STRING=${REDIS_CONNECTION_STRING}
    - AzureWebJobsStorage=${STORAGE_CONNECTION_STRING}
    - AzureWebJobsScriptRoot=/home/site/wwwroot
    - AzureFunctionsJobHost__Logging__Console__IsEnabled=true
    - FUNCTIONS_WORKER_RUNTIME=custom
  depends_on:
    azurite:
      condition: service_healthy
    storage-init:
      condition: service_completed_successfully

services:
  web:
    environment:
      - APP_ENV=test
      - PRISM_API_LB_PORT=${PRISM_API_LB_PORT}
      - STREAM_SERVICE_PORT=${STREAM_SERVICE_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      prism-api-lb:
        condition: service_started
      stream-service:
        condition: service_started

  prism-api-1:
    <<: *prism-api-base
    environment:
      <<: *prism-api-env
      ASPNETCORE_URLS: http://+:7072
    expose:
      - "7072"
    restart: unless-stopped

  prism-api-2:
    <<: *prism-api-base
    environment:
      <<: *prism-api-env
      ASPNETCORE_URLS: http://+:7073
    expose:
      - "7073"
    restart: unless-stopped

  prism-api-lb:
    environment:
      - PRISM_API_LB_PORT=${PRISM_API_LB_PORT}
    image: haproxy:3.0-alpine
    volumes:
      - ../../haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "${PRISM_API_LB_PORT}:${PRISM_API_LB_PORT}"
    depends_on:
      - prism-api-1
      - prism-api-2
  stream-service:
    environment:
      - APP_ENV=test
      - AUTH0_TEST_MODE=1
      - TEST_JWT_SECRET=${TEST_JWT_SECRET}
    depends_on:
      azurite:
        condition: service_healthy
  domain-service:
    environment:
      - APP_ENV=test
      - AzureWebJobsStorage=${STORAGE_CONNECTION_STRING}
      - AzureWebJobsScriptRoot=/home/site/wwwroot
      - AzureFunctionsJobHost__Logging__Console__IsEnabled=true
      - AzureFunctionsJobHost__Logging___LogLevel__Default="Debug"
    depends_on:
      azurite:
        condition: service_healthy
      storage-init:
        condition: service_completed_successfully
  read-model-updater:
    environment:
      - APP_ENV=test
      - AzureWebJobsStorage=${STORAGE_CONNECTION_STRING}
      - AzureWebJobsScriptRoot=/home/site/wwwroot
      - AzureFunctionsJobHost__Logging__Console__IsEnabled=true
      - FUNCTIONS_WORKER_RUNTIME=custom
    depends_on:
      azurite:
        condition: service_healthy
      storage-init:
        condition: service_completed_successfully
      redis:
        condition: service_started
  storage-init:
    environment:
      - APP_ENV=test
    depends_on:
      azurite:
        condition: service_healthy
  redis:
    environment:
      - APP_ENV=test
    depends_on:
      azurite:
        condition: service_healthy
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 5s
      timeout: 3s
      retries: 5
    command: ["azurite", "-s", "-l", "--skipApiVersionCheck", "/data", "--blobHost", "0.0.0.0","--queueHost", "0.0.0.0", "--tableHost", "0.0.0.0"]
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - azurite_data_test:/data

volumes:
  azurite_data_test:
