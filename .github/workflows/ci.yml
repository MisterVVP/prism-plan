---
name: CI
# yamllint disable-line rule:truthy
on:
  push:
    branches:
    - main
    - dev*
    - release/*
    - codex/*
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      domain-service: ${{ steps.filter.outputs.domain-service }}
      read-model-updater: ${{ steps.filter.outputs.read-model-updater }}
      prism-api: ${{ steps.filter.outputs.prism-api }}
      stream-service: ${{ steps.filter.outputs.stream-service }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            domain-service:
              - 'domain-service/**'
            read-model-updater:
              - 'read-model-updater/**'
            prism-api:
              - 'prism-api/**'
            stream-service:
              - 'stream-service/**'
            frontend:
              - 'frontend/**'

  domain-service:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.domain-service == 'true'
    defaults:
      run:
        working-directory: domain-service
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      - run: dotnet test

  read-model-updater:
    runs-on: ubuntu-latest
    needs: changes
    defaults:
      run:
        working-directory: read-model-updater
    if: needs.changes.outputs.read-model-updater == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - run: go test ./...

  prism-api:
    runs-on: ubuntu-latest
    needs: changes
    defaults:
      run:
        working-directory: prism-api
    if: needs.changes.outputs.prism-api == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - run: go test ./...

  stream-service:
    runs-on: ubuntu-latest
    needs: changes
    defaults:
      run:
        working-directory: stream-service
    if: needs.changes.outputs.stream-service == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - run: go test ./...

  frontend:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - run: npm test -- --run
