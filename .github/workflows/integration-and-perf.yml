name: Integration and Performance

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
    inputs:
      run_performance:
        type: boolean
        default: false
  schedule:
    - cron: '0 0 * * *'

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - run: |
          ENV_FILE=tests/docker/env.test.example
          PRISM_API_PORT=$(grep PRISM_API_PORT $ENV_FILE | cut -d'=' -f2)
          FRONTEND_PORT=$(grep FRONTEND_PORT $ENV_FILE | cut -d'=' -f2)
          docker compose --env-file $ENV_FILE -f docker-compose.yml -f tests/docker/docker-compose.tests.yml up -d
            tests/docker/wait-for.sh https://localhost:${FRONTEND_PORT}/healthz 60
          pushd tests/integration
          API_BASE=http://localhost:${PRISM_API_PORT} go test ./...
          popd
          docker compose --env-file $ENV_FILE -f docker-compose.yml -f tests/docker/docker-compose.tests.yml down -v

  perf:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.run_performance == 'true' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - uses: grafana/setup-k6-action@v1
      - run: |
          ENV_FILE=tests/docker/env.test.example
          PRISM_API_PORT=$(grep PRISM_API_PORT $ENV_FILE | cut -d'=' -f2)
          FRONTEND_PORT=$(grep FRONTEND_PORT $ENV_FILE | cut -d'=' -f2)
          STREAM_SERVICE_PORT=$(grep STREAM_SERVICE_PORT $ENV_FILE | cut -d'=' -f2)
          docker compose --env-file $ENV_FILE -f docker-compose.yml -f tests/docker/docker-compose.tests.yml up -d
            tests/docker/wait-for.sh https://localhost:${FRONTEND_PORT}/healthz 60
          API_BASE=http://localhost:${PRISM_API_PORT} k6 run tests/perf/k6/api_mixed_read_write.js --summary-export=k6-summary.json
          STREAM_URL=http://localhost:${STREAM_SERVICE_PORT}/stream go run tests/perf/sse-load/main.go > tests/perf_sse_summary.txt
          docker compose --env-file $ENV_FILE -f docker-compose.yml -f tests/docker/docker-compose.tests.yml down -v
      - uses: actions/upload-artifact@v3
        with:
          name: k6-summary
          path: k6-summary.json
      - uses: actions/upload-artifact@v3
        with:
          name: sse-summary
          path: tests/perf_sse_summary.txt
